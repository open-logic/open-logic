name: AWS-TEST
run-name: ${{ github.actor }} triggered AWS-TEST

# Set the permissions for the workflow
permissions:
  checks: write
  pull-requests: write

#Set Triggers
on:
  workflow_dispatch:
  pull_request:
  
#Jobs  
jobs:
  start-instance:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: eu-central-1
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY }}  
    steps:
      # Installing AWS CLI is not required (pre-installed in the GitHub Actions environment)
      # Start EC2 instance safely
      - name: Start EC2 instance
        run: |
          INSTANCE_ID="i-08d60c6d6d93c636b"
          INSTANCE_STATE=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[0].Instances[0].State.Name" --output text)
          
          echo "Current instance state: $INSTANCE_STATE"
          
          if [ "$INSTANCE_STATE" == "running" ]; then
            echo "Instance is already running. No action needed."
          elif [ "$INSTANCE_STATE" == "stopped" ]; then
            echo "Instance is stopped. Starting it now..."
            aws ec2 start-instances --instance-ids $INSTANCE_ID
            aws ec2 wait instance-running --instance-ids $INSTANCE_ID
            echo "Instance is now running."
          else
            echo "Instance is in state '$INSTANCE_STATE'. Waiting until it can be started..."
            aws ec2 wait instance-stopped --instance-ids $INSTANCE_ID
            echo "Instance is now stopped. Starting it..."
            aws ec2 start-instances --instance-ids $INSTANCE_ID
            aws ec2 wait instance-running --instance-ids $INSTANCE_ID
            echo "Instance is now running."
          fi
      # Wait until the instance is running
      - name: Wait for instance to be running
        run: |
          aws ec2 wait instance-running --instance-ids i-08d60c6d6d93c636b

  do-something:
    runs-on: [self-hosted, aws]
    needs: start-instance
    steps:
      # Checkout the repository
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true
      # Add local tools to path
      - name: Add local tools
        run: |
          echo $LOCAL_TOOLS >> $GITHUB_PATH
      # Placeholder
      - name: Do work
        run: |
          ifconfig
          echo "Instance ENV"
          printenv
          echo "pwd"
          pwd
          ls
          cd ./doc/tutorials/VivadoTutorial/Files
          vivado -mode batch -source scripted_build.tcl

  # Stopping the instance is not required (it stops automatically
  # when it is unused for some time, controlled by AWS alarm)