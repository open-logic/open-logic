name: Coverage Simulation
run-name: ${{ github.actor }} triggered Coverage simulation

# Set the permissions for the workflow
permissions:
  checks: write
  pull-requests: write

#Set Triggers
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron: '0 3 10 * *'
  
#Jobs  
jobs:
  start-instance:
    runs-on: ubuntu-latest
    steps:
      #General Setup
      - name: Checkout actions
        uses: actions/checkout@v4
      #Start AWS Instance
      - name: Start Instance
        uses: ./.github/actions/start-aws-instance
        with:
          instance_id: i-08d60c6d6d93c636b
          region: eu-central-1
          aws_secret_access_key: ${{ secrets.AWS_SECRET }}
          aws_access_key_id: ${{ secrets.AWS_KEY }}

  simulation:
    runs-on: [self-hosted, aws]
    needs: start-instance
    steps:
      # Checkout the repository
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true
      # Coverage Simulation (check > 95%)
      # On PRs errors are required if coverage is low
      - name: Check Coverage Level
        if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
        run: |
          source $LOCAL_TOOLS
          cd ./sim
          python3 ./run.py --modelsim --coverage
          python3 ./AnalyzeCoverage.py --min_coverage=95
      # Coverage Simulation (update badges)
      # On main, we want to udpate badges ALWAYS (also if coverage is low)
      - name: Create Coverage Badges
        if: github.event_name == 'push' || github.event_name == 'schedule'
        run: |
          source $LOCAL_TOOLS
          cd ./sim
          python3 ./run.py --modelsim --coverage
          python3 ./AnalyzeCoverage.py --badges


  # Stopping the instance is not required (it stops automatically
  # when it is unused for some time, controlled by AWS alarm)